definitions:
  user.UserInput:
    properties:
      passportNumber:
        type: string
    type: object
  user.UserTask:
    properties:
      end_time:
        type: string
      id_task:
        type: integer
      id_user:
        type: integer
      start_time:
        type: string
      task_name:
        type: string
      total_minutes:
        type: integer
    type: object
  user.Users:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: integer
      passport_serie:
        type: integer
      patronymic:
        type: string
      surname:
        type: string
      userTask:
        items:
          $ref: '#/definitions/user.UserTask'
        type: array
    type: object
info:
  contact: {}
paths:
  /api/v1/users:
    delete:
      consumes:
      - application/json
      description: Delete a user and their tasks from the database
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            type: string
        "400":
          description: Invalid user_id parameter
          schema:
            type: string
        "500":
          description: Failed to delete user
          schema:
            type: string
      summary: Delete a user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get a list of users with optional filters and pagination
      parameters:
      - description: Passport Serie
        in: query
        name: passport_serie
        type: string
      - description: Passport Number
        in: query
        name: passport_number
        type: string
      - description: Surname
        in: query
        name: surname
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Patronymic
        in: query
        name: patronymic
        type: string
      - description: Address
        in: query
        name: address
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/user.Users'
            type: array
        "400":
          description: Invalid query parameters
          schema:
            type: string
        "500":
          description: Failed to retrieve users
          schema:
            type: string
      summary: Get users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Add a new user to the database
      parameters:
      - description: User Input
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User ID
          schema:
            type: integer
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Failed to add user
          schema:
            type: string
      summary: Add a new user
      tags:
      - User
  /api/v1/users/{id}:
    put:
      consumes:
      - application/json
      description: Update user details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Users'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user details
          schema:
            $ref: '#/definitions/user.Users'
        "400":
          description: Invalid user ID or input
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Failed to update user
          schema:
            type: string
      summary: Update a user
      tags:
      - User
swagger: "2.0"
